@model IEnumerable<MusicPortal.Models.RegistrationRequest>

<h1 class="text-3xl font-bold mb-4">Registration Requests</h1>

<table class="min-w-full divide-y divide-gray-200">
    <thead class="bg-gray-50">
        <tr>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Username</th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Email</th>
            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
        </tr>
    </thead>
    <tbody class="bg-white divide-y divide-gray-200">
        @foreach (var request in Model)
        {
            <tr id="row-@request.Id">
                <td class="px-6 py-4 whitespace-nowrap">@request.Username</td>
                <td class="px-6 py-4 whitespace-nowrap">@request.Email</td>
                <td class="px-6 py-4 whitespace-nowrap">
                    @if (!request.IsApproved)
                    {
                        <button class="text-blue-500 hover:text-blue-700 approve-btn" data-id="@request.Id">Approve</button>
                        <button class="text-red-500 hover:text-red-700 reject-btn" data-id="@request.Id">Reject</button>
                    }
                    else
                    {
                        <span class="text-green-500">Approved</span>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

<form id="antiforgery-form">
    @Html.AntiForgeryToken()
</form>

@section Scripts {
    <script>
       document.addEventListener('DOMContentLoaded', function () {
    var token = document.querySelector('#antiforgery-form input[name="__RequestVerificationToken"]').value;

    //Approve
    document.querySelectorAll('.approve-btn').forEach(function(button) {
        button.addEventListener('click', function () {
            var requestId = this.getAttribute('data-id');

            fetch('@Url.Action("ApproveRequest", "RegistrationRequests")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'RequestVerificationToken': token
                },
                body: `requestId=${encodeURIComponent(requestId)}`
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    document.querySelector(`#row-${requestId} .approve-btn`).remove();
                    document.querySelector(`#row-${requestId} .reject-btn`).remove();
                    document.querySelector(`#row-${requestId} td:nth-child(3)`).innerHTML = '<span class="text-green-500">Approved</span>';
                } else {
                    alert(data.message || 'Error occurred');
                }
            });
        });
    });

    //Reject
    document.querySelectorAll('.reject-btn').forEach(function(button) {
        button.addEventListener('click', function () {
            var requestId = this.getAttribute('data-id');

            fetch('@Url.Action("RejectRequest", "RegistrationRequests")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'RequestVerificationToken': token
                },
                body: `requestId=${encodeURIComponent(requestId)}`
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    document.querySelector(`#row-${requestId}`).remove();
                } else {
                    alert(data.message || 'Error occurred');
                }
            });
        });
    });
});

    </script>
}
